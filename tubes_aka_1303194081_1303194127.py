# -*- coding: utf-8 -*-
"""TUBES AKA 1303194081_1303194127.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18de7GW4ENf1AuXr4MGI8vACTxjm-08d4

#APLIKASI

##LIBRARY
"""

import time 
import random
import pandas as pd

"""##KODE COCKTAIL SORT"""

def cocktailSort(a):
    start_cocktail = time.time()
    n              = len(a)
    swapped        = True
    start          = 0
    end            = n-1

    while (swapped == True) :
      swapped = False
      for i in range(start, end):
        if(a[i] > a[i+1]):
          a[i], a[i+1] = a[i+1], a[i]
          swapped = True

      if (swapped == False):
          break

      swapped = False

      end = end-1

      for i in range(end-1, start-1, -1):
          if (a[i] > a[i + 1]):
                a[i], a[i + 1] = a[i + 1], a[i]
                swapped = True
 
      start = start + 1
    CocktailRunTime.append(time.time() - start_cocktail) 
    return a

"""##KODE INSERTION SORT"""

def insertionSort(arr): 
    start_insertion = time.time()   #untuk menunjukkan bahwa waktu mulai diisi dengan waktu saat ini
   
    for i in range(1, len(arr)):    #menunjukkan for jarak array 1 sampai array ke n gtu 
        key = arr[i] 
        j = i-1
        while j >= 0 and key < arr[j] : 
                arr[j + 1] = arr[j] 
                j -= 1              #sama dengan j--
        arr[j + 1] = key 
    InsertionRunTime.append(time.time() - start_insertion)    #append sama dengan push -> arr[].append(1) -> arr[1]
    return arr

"""##PRINT RANDOM DATA"""

def random_number(n):
    temp = list(range(1,n+1))
    random.shuffle(temp)
    return temp

print(random_number(10))

"""##CALL COCKTAIL SORT"""

def call_cocktail():
    n_cocktail = n_data
    Res_CocktailRunTime = []
    for z in range(len(n_cocktail)):
        temp = random_number(n_cocktail[z])
        Cocktail_num_before_sort.append(temp+[])
        Cocktail_num_after_sort.append(cocktailSort(temp))
        
    for cocktail_i in CocktailRunTime:
        Res_CocktailRunTime.append(cocktail_i)
    return Res_CocktailRunTime

"""##CALL INSERTION SORT"""

def call_insertion():
    n_insertion          = n_data   # n_insertion akan melooping untuk banyak data [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]
    Res_InsertionRunTime = []       # untuk menyimpan himpunan hasil running Insertion
    for y in range(len(n_insertion)): 
        temp = random_number(n_insertion[y])
        Insertion_num_before_sort.append(temp+[])
        Insertion_num_after_sort.append(insertionSort(temp))
    for insertion_i in InsertionRunTime:            #insertion_i utk menyimpan seluruh isi data setelah di looping
        Res_InsertionRunTime.append(insertion_i)
    return Res_InsertionRunTime

"""##MAIN """

n_data = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]
CocktailRunTime             = []
InsertionRunTime            = []
Insertion_num_before_sort   = []
Insertion_num_after_sort    = []
Cocktail_num_before_sort    = []
Cocktail_num_after_sort     = []

Res_CocktailRunTime  = call_cocktail()
Res_InsertionRunTime = call_insertion()

print('INSERTION BEFORE')
print(Insertion_num_before_sort)
print('INSERTION AFTER')
print(Insertion_num_after_sort)
print('COCKTAIL BEFORE')
print(Cocktail_num_before_sort)
print('COCKTAIL AFTER')
print(Cocktail_num_after_sort)

"""####Perbandingan Running Time"""

vis_table = list(zip(n_data,Res_CocktailRunTime,Res_InsertionRunTime))
df = pd.DataFrame(vis_table, columns=['Jumlah Data(N)',
                                      'Running Time Cocktail',
                                      'Running Time Insertion'])
print(df)

"""Seperti terlihat pada tabel diatas dapat kita ambil kesimpulan saat mensorting data cocktail sort membutuhkan waktu lebih lama dari pada insertion sort namun perbedaannya tidak terlalu signifikan

#VISUALISASI

###Histogram Visualization
"""

index = n_data
df = pd.DataFrame({'InsertionRunTime': Res_InsertionRunTime}, 
                  index=index)
ax = df.plot.bar(rot=0,color={"darkviolet"})

index = n_data
df = pd.DataFrame({'CocktailRunTime': Res_CocktailRunTime},
                  index=index)
ax = df.plot.bar(rot=0, color={"red"})

"""####Comparizon between Cocktail and Insertion"""

index = n_data
df = pd.DataFrame({'CocktailRunTime': Res_CocktailRunTime,
                   'InsertionRunTime': Res_InsertionRunTime},
                   index=index)
ax = df.plot.bar(rot=0)